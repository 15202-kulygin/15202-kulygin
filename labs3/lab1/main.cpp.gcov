        -:    0:Source:main.cpp
        -:    0:Programs:4
        -:    1:#include <iostream>
        -:    2:#include <fstream>
        -:    3:#include <string>
        -:    4:#include "input.h"
        -:    5:#include "hash.h"
        -:    6:#include "include/gtest/gtest.h"
        -:    7:
        -:    8://g++ -Lgtestbuild -I./include --coverage tests.cpp main.cpp input.cpp hash.cpp -lgtest
        -:    9://gcov -abcfu tests.cpp main.cpp input.cpp hash.cpp 
        -:   10:
        -:   11:
        -:   12://assignment --- *ht = *ht2;
        -:   13:
        -:   14:using namespace std;
        -:   15:
function main called 2 returned 100% blocks executed 69%
        2:   16:GTEST_API_ int main (int argc, char ** argv)
        2:   16-block  0
        -:   17:{	
        4:   18:	string str;
        2:   18-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   18-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   18-block  2
unconditional  6 taken 2
        2:   18-block  3
unconditional  7 taken 2
    %%%%%:   18-block  4
call    8 never executed
unconditional  9 never executed
        4:   19:    ifstream input;
        2:   19-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   19-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
    %%%%%:   19-block  2
call    6 never executed
unconditional  7 never executed
        2:   20:    input.open("qwe.txt");
        2:   20-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        4:   21:    HashTable ht;
        2:   21-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   21-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
    %%%%%:   21-block  2
call    6 never executed
unconditional  7 never executed
       18:   22:    while (getline(input, str))
       18:   22-block  0
call    0 returned 18
branch  1 taken 18 (fallthrough)
branch  2 taken 0 (throw)
       18:   22-block  1
call    3 returned 18
branch  4 taken 18 (fallthrough)
branch  5 taken 0 (throw)
       18:   22-block  2
branch  6 taken 16 (fallthrough)
branch  7 taken 2
       16:   22-block  3
unconditional  8 taken 16
        -:   23:    {
       32:   24:        Key key = str;
       16:   24-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
       16:   24-block  1
call    3 returned 16
branch  4 taken 16 (fallthrough)
branch  5 taken 0 (throw)
    %%%%%:   24-block  2
call    6 never executed
unconditional  7 never executed
    %%%%%:   24-block  3
unconditional  8 never executed
        -:   25:        Value value;
       16:   26:        getkey(str, key);
       16:   26-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
       16:   26-block  1
call    3 returned 16
branch  4 taken 16 (fallthrough)
branch  5 taken 0 (throw)
       16:   26-block  2
call    6 returned 16
branch  7 taken 16 (fallthrough)
branch  8 taken 0 (throw)
    %%%%%:   26-block  3
call    9 never executed
unconditional 10 never executed
       16:   27:        getvalue(str, value);
       16:   27-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
       16:   27-block  1
call    3 returned 16
branch  4 taken 16 (fallthrough)
branch  5 taken 0 (throw)
       16:   27-block  2
call    6 returned 16
branch  7 taken 16 (fallthrough)
branch  8 taken 0 (throw)
    %%%%%:   27-block  3
call    9 never executed
unconditional 10 never executed
       16:   28:        ht.insert(key, value);
       16:   28-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
        -:   29:    }
        -:   30:
        2:   31:    cout << endl << endl;
        2:   31-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   31-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        -:   32:    //ht->print();
        -:   33:
        2:   34:    input.close();
        2:   34-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   35:    ht.print();
        2:   35-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   36:    input.open("asd.txt");
        2:   36-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        4:   37:    HashTable ht2;
        2:   37-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   37-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
    %%%%%:   37-block  2
call    6 never executed
unconditional  7 never executed
        -:   38:    //ht2.print();
        -:   39:    //input.close();
       10:   40:    while (getline(input, str))
       10:   40-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:   40-block  1
call    3 returned 10
branch  4 taken 10 (fallthrough)
branch  5 taken 0 (throw)
       10:   40-block  2
branch  6 taken 8 (fallthrough)
branch  7 taken 2
        8:   40-block  3
unconditional  8 taken 8
        -:   41:    {
        -:   42:        
       16:   43:        Key key = str;
        8:   43-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   43-block  1
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0 (throw)
    %%%%%:   43-block  2
call    6 never executed
unconditional  7 never executed
    %%%%%:   43-block  3
unconditional  8 never executed
        -:   44:        Value value;
        8:   45:        getkey(str, key);
        8:   45-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   45-block  1
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0 (throw)
        8:   45-block  2
call    6 returned 8
branch  7 taken 8 (fallthrough)
branch  8 taken 0 (throw)
    %%%%%:   45-block  3
call    9 never executed
unconditional 10 never executed
        8:   46:        getvalue(str, value);
        8:   46-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   46-block  1
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0 (throw)
        8:   46-block  2
call    6 returned 8
branch  7 taken 8 (fallthrough)
branch  8 taken 0 (throw)
    %%%%%:   46-block  3
call    9 never executed
unconditional 10 never executed
        -:   47:        
        8:   48:        ht2.insert(key, value);
        8:   48-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        -:   49:        
        -:   50:    }
        2:   51:    input.close();
        2:   51-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   52:    ht2.print();
        2:   52-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   53:    //ht2.print();
        -:   54:    /*cout << "Waiting" << endl;
        -:   55:    while (cin >> str)
        -:   56:    {
        -:   57:        if(ht2.search(str))
        -:   58:        {
        -:   59:            cout << ht2.at(str).age << " age" << endl;
        -:   60:            cout << ht2.at(str).weight << " weight" << endl; 
        -:   61:        }
        -:   62:        else
        -:   63:        {
        -:   64:            cout << "Not found" << endl;
        -:   65:            break;
        -:   66:        }
        -:   67:    }*/
        -:   68:    /*cout << endl << endl;
        -:   69:    const HashTable ht3 = ht;
        -:   70:
        -:   71:    cout << ht3.at("qas").age << " 3 age" << endl;
        -:   72:    ht3.at("qas").age = 5;
        -:   73:    cout << ht3.at("qas").age << " 4 age" << endl;*/
        2:   74:    cout << "Running tests\n" << endl;
        2:   74-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   74-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   75:    testing::InitGoogleTest(&argc, argv);
        2:   75-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   76:    return RUN_ALL_TESTS();
        2:   76-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   77: 
function _GLOBAL__sub_I_main called 2 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 2 returned 100% blocks executed 100%
        8:   78:}
        2:   78-block  0
        2:   78-block  1
call    0 returned 2
        2:   78-block  2
        2:   78-block  3
branch  1 taken 2 (fallthrough)
branch  2 taken 0
        2:   78-block  4
branch  3 taken 2 (fallthrough)
branch  4 taken 0
        -:   79:
        -:   80:
        -:   81:
        -:   82:
        -:   83:/* cout << "test swap" << endl;
        -:   84:    ht->swap(*ht2);
        -:   85:    ht->print();
        -:   86:    ht2->print();
        -:   87:    ht2 = ht2;
        -:   88:    cout << endl << endl;
        -:   89:    cout << "test operator =" << endl;
        -:   90:    ht->print();
        -:   91:    ht2->print();
        -:   92:    cout << endl << endl;
        -:   93:    cout << "test clear" << endl;
        -:   94:    ht->clear();
        -:   95:    ht->print();
        -:   96:    ht2->print();
        -:   97:    cout << endl << endl;
        -:   98:    cout << "test erase" << endl;
        -:   99:    ht2->erase("uggu");
        -:  100:    ht2->erase("qas");
        -:  101:    ht2->erase("qwe");
        -:  102:    ht2->erase("rtyu");
        -:  103:    ht2->erase("gfhbjbh");
        -:  104:    ht2->erase("uggu");
        -:  105:    ht2->erase("uggu");
        -:  106:    ht2->print();
        -:  107:    cout << endl << endl;
        -:  108:    int size = ht2->getsize();
        -:  109:    cout << "SIZE " << size << endl;
        -:  110:    bool empt1 = ht->empty();
        -:  111:    bool empt2 = ht2->empty();
        -:  112:    cout << "EMPTY CHECK " << empt1 << ' ' << empt2 << endl;
        -:  113:    cout << endl << endl << "== CHECK " << endl;
        -:  114:    if (ht == ht2)
        -:  115:        cout << "YES" << endl;
        -:  116:    else
        -:  117:        cout << "NO" << endl;
        -:  118:    if (ht != ht2)
        -:  119:        cout << "no" << endl;
        -:  120:    else
        -:  121:        cout << "yes" << endl;
        -:  122:    //ht = ht2;
        -:  123:    if (ht == ht2)
        -:  124:        cout << "YES" << endl;
        -:  125:    else
        -:  126:        cout << "NO" << endl;
        -:  127:    if (ht != ht2)
        -:  128:        cout << "no" << endl;
        -:  129:    else
        -:  130:        cout << "yes" << endl;
        -:  131:    cout << endl << endl;
        -:  132:    cout << "test at" << endl;
        -:  133:   // Value test = ht2->at("gg");
        -:  134:    cout << endl << endl;
        -:  135:    cout << "test operator []" << endl;
        -:  136:    ht->print();
        -:  137:    ht2->print();
        -:  138:    //test = (*ht)[(const Key &)("qwe")];
        -:  139:    //cout << "testing [] " << test.age << ' ' << test.weight << endl; */
